pipeline {
    agent {
        label 'docker-agent'
    }
    tools {
        nodejs 'Node 21'
    }
    environment {
        IMAGE_TAG = '28'
        IMAGE_NAME = "papadooo/freelance-frontend:${IMAGE_TAG}"
        DOCKER_REGISTRY = 'https://registry.hub.docker.com'
    }
    stages {
        stage('Checkout') {
            steps {
                // Checkout code from GitHub repository
                git branch: 'test-branch', url: 'https://github.com/naasssssty/Freelance.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                // Install npm dependencies for frontend
                dir('frontend') {
                    sh 'npm install'
                }
            }
        }
        stage('Build') {
            steps {
                // Build the frontend using npm
                dir('frontend') {
                    sh 'npm run build'
                }
            }
        }
        stage('Test') {
            steps {
                // Run tests for frontend
                dir('frontend') {
                    sh 'npm run test -- --watchAll=false --coverage || true'
                }
            }
            post {
                always {
                    // Publish test results if they exist
                    junit allowEmptyResults: true, testResults: '**/junit.xml'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                // Build Docker image for frontend
                dir('frontend') {
                    sh "docker build -f docker/Dockerfile.frontend -t ${IMAGE_NAME} ."
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    sh "docker push ${IMAGE_NAME}"
                }
            }
        }
    }
    post {
        always {
            echo 'Frontend pipeline completed.'
        }
        success {
            echo 'Frontend pipeline completed successfully!'
        }
        failure {
            echo 'Frontend pipeline failed. Check the logs for details.'
        }
    }
}