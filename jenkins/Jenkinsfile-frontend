pipeline {
    agent {
        label 'docker-agent'
    }
    tools {
        nodejs 'Node 21'
    }
    environment {
        IMAGE_TAG = '28'
        IMAGE_NAME = "papadooo/freelance-frontend:${IMAGE_TAG}"
    
    }
    stages {
        stage('Checkout') {
            steps {
                // Καθαρίζουμε πρώτα τον workspace
                cleanWs()
                
                // Checkout code from GitHub repository με περισσότερες λεπτομέρειες
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'test-branch']],
                    extensions: [[$class: 'CloneOption', depth: 1, noTags: false, reference: '', shallow: true]],
                    userRemoteConfigs: [[url: 'https://github.com/naasssssty/Freelance.git']]
                ])
            }
        }
        stage('Install Dependencies') {
            steps {
                // Install npm dependencies for frontend
                dir('frontend') {
                    sh 'npm install'
                }
            }
        }
        stage('Build') {
            steps {
                // Build the frontend using npm
                dir('frontend') {
                    sh 'npm run build'
                }
            }
        }
        stage('Test') {
            steps {
                // Run tests for frontend
                dir('frontend') {
                    sh 'npm run test -- --watchAll=false --coverage || true'
                }
            }
            post {
                always {
                    // Publish test results if they exist
                    junit allowEmptyResults: true, testResults: '**/junit.xml'
                }
            }
        }
        stage('Check Docker Access') {
            steps {
                // Check if Docker is accessible
                sh 'docker info || echo "Docker access failed. Ensure Jenkins has permission to access Docker daemon."'
            }
        }
        stage('Build Docker Image') {
            steps {

                withEnv(["PATH+EXTRA=/usr/local/bin"]) {
                    dir('frontend') {
                        sh "docker build -f /var/jenkins_home/workspace/Freelance-Frontend/docker/Dockerfile.frontend -t ${IMAGE_NAME} ."
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {

                    sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    sh "docker push ${IMAGE_NAME}"
                }
            }
        }
        stage('Check Docker Connection') {
            steps {
                sh 'docker info || echo "Docker connection failed"'
                sh 'env | grep DOCKER || echo "DOCKER env vars not set"'
                sh 'ls -l /var/run/docker.sock || echo "Docker socket not found"'
                sh 'id || echo "Cannot get user info"'
                sh 'groups || echo "Cannot get group info"'
            }
        }
    }
    post {
        always {
            echo 'Frontend pipeline completed.'
        }
        success {
            echo 'Frontend pipeline completed successfully!'
        }
        failure {
            echo 'Frontend pipeline failed. Check the logs for details.'
        }
    }
}