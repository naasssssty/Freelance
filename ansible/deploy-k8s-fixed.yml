---
- name: Deploy Fixed Freelance Platform on Kubernetes
  hosts: localhost
  connection: local
  gather_facts: false
  
  tasks:
    - name: Create namespace
      kubernetes.core.k8s:
        name: freelance
        api_version: v1
        kind: Namespace
        state: present
        
    - name: Apply ConfigMap and Secrets
      kubernetes.core.k8s:
        src: ../kubernetes/configmap.yml
        state: present
        
    - name: Deploy PostgreSQL
      kubernetes.core.k8s:
        src: ../kubernetes/postgres-deployment.yml
        state: present
        
    - name: Deploy MailHog
      kubernetes.core.k8s:
        src: ../kubernetes/mailhog-deployment.yml
        state: present
        
    - name: Deploy MinIO
      kubernetes.core.k8s:
        src: ../kubernetes/minio-deployment.yml
        state: present
        
    - name: Wait for infrastructure services to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: freelance
        label_selectors:
          - app in (postgres,mailhog,minio)
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: 300
        
    - name: Apply Nginx ConfigMap
      kubernetes.core.k8s:
        src: ../kubernetes/nginx-configmap.yml
        state: present
        
    - name: Deploy Backend
      kubernetes.core.k8s:
        src: ../kubernetes/backend-deployment.yml
        state: present
        
    - name: Deploy Frontend  
      kubernetes.core.k8s:
        src: ../kubernetes/frontend-deployment.yml
        state: present
        
    - name: Wait for application services to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: freelance
        label_selectors:
          - app in (backend,frontend)
        wait: true
        wait_condition:
          type: Ready
          status: "True"
        wait_timeout: 300
        
    - name: Remove old conflicting ingress resources
      kubernetes.core.k8s:
        api_version: networking.k8s.io/v1
        kind: Ingress
        name: "{{ item }}"
        namespace: freelance
        state: absent
      loop:
        - freelance-api-ingress
        - freelance-frontend-ingress
      ignore_errors: true
        
    - name: Deploy fixed Ingress
      kubernetes.core.k8s:
        src: ../kubernetes/ingress.yml
        state: present
        
    - name: Wait for Ingress to be ready
      kubernetes.core.k8s_info:
        api_version: networking.k8s.io/v1
        kind: Ingress
        name: freelance-ingress
        namespace: freelance
        wait: true
        wait_timeout: 60
        
    - name: Display deployment status
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: freelance
      register: pods
      
    - name: Show pod status
      debug:
        msg: |
          Pod {{ item.metadata.name }}: {{ item.status.phase }}
          Ready: {{ item.status.conditions | selectattr('type', 'equalto', 'Ready') | map(attribute='status') | first | default('Unknown') }}
      loop: "{{ pods.resources }}"
      
    - name: Display services
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Service
        namespace: freelance
      register: services
      
    - name: Show services
      debug:
        msg: |
          Service {{ item.metadata.name }}: {{ item.spec.type }}
          Ports: {{ item.spec.ports | map(attribute='port') | list }}
      loop: "{{ services.resources }}"
      
    - name: Final deployment summary
      debug:
        msg: |
          ‚úÖ Freelance Platform Deployed Successfully!
          
          üåê Access URLs:
          - Main Application: http://freelance.local
          - MailHog UI: http://freelance.local:8025  
          - MinIO Console: http://freelance.local:9001
          
          üìã Next Steps:
          1. Ensure 'minikube tunnel' is running
          2. Test registration: http://freelance.local/register
          3. Test login: http://freelance.local/login
          
          üîß Fixed Issues:
          - ‚úÖ Nginx proxy endpoints now preserve /api prefix
          - ‚úÖ Removed conflicting ingress resources
          - ‚úÖ Fixed service names and routing
          - ‚úÖ Updated image references to local builds 