---
- name: Deploy Freelance platform to Kubernetes (Simple)
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    kubeconfig_path: "{{ lookup('env', 'KUBECONFIG') | default('~/.kube/config', true) }}"

  tasks:
    - name: Create namespace
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: freelance

    - name: Create PostgreSQL deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: postgres
            namespace: freelance
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: postgres
            template:
              metadata:
                labels:
                  app: postgres
              spec:
                containers:
                - name: postgres
                  image: postgres:15
                  env:
                  - name: POSTGRES_DB
                    value: freelancer_db
                  - name: POSTGRES_USER
                    value: freelancer_user
                  - name: POSTGRES_PASSWORD
                    value: freelancer_pass
                  ports:
                  - containerPort: 5432

    - name: Create PostgreSQL service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: postgres
            namespace: freelance
          spec:
            selector:
              app: postgres
            ports:
            - port: 5432
              targetPort: 5432

    - name: Create MailHog deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: mailhog
            namespace: freelance
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: mailhog
            template:
              metadata:
                labels:
                  app: mailhog
              spec:
                containers:
                - name: mailhog
                  image: mailhog/mailhog:latest
                  ports:
                  - containerPort: 1025
                  - containerPort: 8025

    - name: Create MailHog service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: mailhog
            namespace: freelance
          spec:
            selector:
              app: mailhog
            ports:
            - name: smtp
              port: 1025
              targetPort: 1025
            - name: http
              port: 8025
              targetPort: 8025

    - name: Create MinIO deployment
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: minio
            namespace: freelance
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: minio
            template:
              metadata:
                labels:
                  app: minio
              spec:
                containers:
                - name: minio
                  image: minio/minio:latest
                  args:
                  - server
                  - /data
                  - --console-address
                  - ":9001"
                  env:
                  - name: MINIO_ACCESS_KEY
                    value: iRb4jDOLKvmbfkQ
                  - name: MINIO_SECRET_KEY
                    value: OskbMSsFLoKw41d
                  ports:
                  - containerPort: 9000
                  - containerPort: 9001

    - name: Create MinIO service
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: minio
            namespace: freelance
          spec:
            selector:
              app: minio
            ports:
            - name: api
              port: 9000
              targetPort: 9000
            - name: console
              port: 9001
              targetPort: 9001

    - name: Wait for PostgreSQL to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Pod
        namespace: freelance
        label_selectors:
          - app=postgres
        wait: true
        wait_condition:
          type: Ready
          status: True
        wait_timeout: 300

    - name: Show running pods
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Pod
        namespace: freelance
      register: pods_info

    - name: Display pods status
      debug:
        msg: "Pod {{ item.metadata.name }} is {{ item.status.phase }}"
      loop: "{{ pods_info.resources }}"

    - name: Show services
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        kind: Service
        namespace: freelance
      register: services_info

    - name: Display services
      debug:
        msg: "Service {{ item.metadata.name }} on port {{ item.spec.ports[0].port }}"
      loop: "{{ services_info.resources }}" 